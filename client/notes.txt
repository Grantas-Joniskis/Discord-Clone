FRONT-END:
  BUGS:
    - fix register input autofill background color. (PARTIALY FIXED)
    ? Form data undefined value becomes string -> bad practice! (GONE??)

  TODO:
    - How to send POST request to the server using axios from the form? (COMPLETED)
    - How to use .env file with React? (COMPLETED)
    - Learn useEffect, useState with React. (COMPLETED)
    - !! Split Discord Logo into componenets folder. !! (COMPLETED)
    - !! Rename ApiService to AxiosService !!
    - !! Move IO to services folder !!

  GENERAL:
    - How to store types properly?

  FOR LATER:
    - Move index.html file to src folder.
    - Add visible validation to forms.

BACK-END:
  TODO:
    - Create api for user list. (COMPLETED)
    - Create api for checking if the user is logged in. (COMPLETED)

QUESTIONS:
  - How to know if person is logged in? (CLEARED)
  - How to get data in order to update chat messages? (CLEARED)
  - How to connect one user with another?
  - How the messages are stored?
  
PLAN:
- 20th Learn Socket.IO and React.useState(). Create simple demo version of chat.
- 21st Create the bones of main chat page with well functioning logic. Users can message each other.
- 22nd Design the main chat page. Refactor the code.
- 23rd If enough time, create extra functionallity for updating user data.
- 24th Study the back-end code prepare for presentation.
